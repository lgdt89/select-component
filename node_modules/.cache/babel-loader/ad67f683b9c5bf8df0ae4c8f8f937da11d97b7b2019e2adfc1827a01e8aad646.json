{"ast":null,"code":"var _jsxFileName = \"/home/luisdiaz/Desktop/select-component/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedCountries, setSelectedCountries] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n  const countries = [\"India\", \"Usa\", \"Francia\"];\n  const handleCountryToggle = country => {\n    let updatedCountries;\n    if (selectedCountries.includes(country)) {\n      updatedCountries = selectedCountries.filter(c => c !== country);\n    } else {\n      updatedCountries = [...selectedCountries, country];\n    }\n    setSelectedCountries(updatedCountries);\n    setSelectAll(updatedCountries.length === countries.length);\n  };\n  const handleSelectAllToggle = () => {\n    if (selectAll) {\n      setSelectedCountries([]);\n    } else {\n      setSelectedCountries(countries);\n    }\n    setSelectAll(!selectAll);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Countrys Checkbox:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectAll,\n          onChange: handleSelectAllToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), \"Select All\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom-checkbox\",\n            type: \"checkbox\",\n            checked: selectedCountries.includes(country),\n            onChange: () => handleCountryToggle(country)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, country, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"j6GhRZRnZ91E3CJxQMrNjGufdIs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","selectedCountries","setSelectedCountries","selectAll","setSelectAll","countries","handleCountryToggle","country","updatedCountries","includes","filter","c","length","handleSelectAllToggle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","map","_c","$RefreshReg$"],"sources":["/home/luisdiaz/Desktop/select-component/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  const [selectedCountries, setSelectedCountries] = useState<string[]>([]);\n  const [selectAll, setSelectAll] = useState(false);\n  const countries = [\"India\", \"Usa\", \"Francia\"];\n  const handleCountryToggle = (country: string) => {\n    let updatedCountries: string[];\n\n    if (selectedCountries.includes(country)) {\n      updatedCountries = selectedCountries.filter((c) => c !== country);\n    } else {\n      updatedCountries = [...selectedCountries, country];\n    }\n\n    setSelectedCountries(updatedCountries);\n    setSelectAll(updatedCountries.length === countries.length);\n  };\n  const handleSelectAllToggle = () => {\n    if (selectAll) {\n      setSelectedCountries([]);\n    } else {\n      setSelectedCountries(countries);\n    }\n\n    setSelectAll(!selectAll);\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"checkbox-container\">\n        <h2>Countrys Checkbox:</h2>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={selectAll}\n            onChange={handleSelectAllToggle}\n          />\n          Select All\n        </label>\n\n        {countries.map((country) => (\n          <div key={country}>\n            <label>\n              <input\n              className=\"custom-checkbox\" \n                type=\"checkbox\"\n                checked={selectedCountries.includes(country)}\n                onChange={() => handleCountryToggle(country)}\n              />\n              {country}\n            </label>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGN,QAAQ,CAAW,EAAE,CAAC;EACxE,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMS,SAAS,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,SAAS,CAAC;EAC7C,MAAMC,mBAAmB,GAAIC,OAAe,IAAK;IAC/C,IAAIC,gBAA0B;IAE9B,IAAIP,iBAAiB,CAACQ,QAAQ,CAACF,OAAO,CAAC,EAAE;MACvCC,gBAAgB,GAAGP,iBAAiB,CAACS,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKJ,OAAO,CAAC;IACnE,CAAC,MAAM;MACLC,gBAAgB,GAAG,CAAC,GAAGP,iBAAiB,EAAEM,OAAO,CAAC;IACpD;IAEAL,oBAAoB,CAACM,gBAAgB,CAAC;IACtCJ,YAAY,CAACI,gBAAgB,CAACI,MAAM,KAAKP,SAAS,CAACO,MAAM,CAAC;EAC5D,CAAC;EACD,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClC,IAAIV,SAAS,EAAE;MACbD,oBAAoB,CAAC,EAAE,CAAC;IAC1B,CAAC,MAAM;MACLA,oBAAoB,CAACG,SAAS,CAAC;IACjC;IAEAD,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EACD,oBACEL,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBjB,OAAA;MAAKgB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCjB,OAAA;QAAAiB,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BrB,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UACEsB,IAAI,EAAC,UAAU;UACfC,OAAO,EAAElB,SAAU;UACnBmB,QAAQ,EAAET;QAAsB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,cAEJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EAEPd,SAAS,CAACkB,GAAG,CAAEhB,OAAO,iBACrBT,OAAA;QAAAiB,QAAA,eACEjB,OAAA;UAAAiB,QAAA,gBACEjB,OAAA;YACAgB,SAAS,EAAC,iBAAiB;YACzBM,IAAI,EAAC,UAAU;YACfC,OAAO,EAAEpB,iBAAiB,CAACQ,QAAQ,CAACF,OAAO,CAAE;YAC7Ce,QAAQ,EAAEA,CAAA,KAAMhB,mBAAmB,CAACC,OAAO;UAAE;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC,EACDZ,OAAO;QAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GATAZ,OAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUZ,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CAtDQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAwDZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}